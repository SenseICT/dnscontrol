package route53

import (
	"strings"
	"testing"
)

func r(s string, c int) string { return strings.Repeat(s, c) }

func TestTxtDecode(t *testing.T) {
	tests := []struct {
		data     string
		expected []string
	}{
		{`foo`, []string{`foo`}},
		{`"foo"`, []string{`foo`}},
		{`"foo bar"`, []string{`foo bar`}},
		{`foo bar`, []string{`foo`, `bar`}},
		{`"aaa" "bbb"`, []string{`aaa`, `bbb`}},
		{`"a\"a" "bbb"`, []string{`a"a`, `bbb`}},
		// Seen in live traffic:
		{"\"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"",
			[]string{r("B", 254)}},
		{"\"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"",
			[]string{r("C", 255)}},
		{"\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\" \"D\"",
			[]string{r("D", 255), "D"}},
		{
			[]string{r("E", 255), r("E", 255)}},
		{
			[]string{r("F", 255), r("F", 255), "F"}},
		{
			[]string{r("G", 255), r("G", 255), r("G", 255)}},
		{
			[]string{r("H", 255), r("H", 255), r("H", 255), "H"}},
		{"\"quo'te\"", []string{`quo'te`}},
		{"\"blah`blah\"", []string{"blah`blah"}},
		{"\"quo\\\"te\"", []string{`quo"te`}},
		{"\"q\\\"uo\\\"te\"", []string{`q"uo"te`}},
		{"\"backs\\\\lash\"", []string{`backs\lash`}},
	}
	for i, test := range tests {
		got, err := txtDecode(test.data)
		if err != nil {
			t.Error(err)
		}

		want := strings.Join(test.expected, "")
		if got != want {
			t.Errorf("%v: expected TxtStrings=(%q) got (%q)", i, want, got)
		}
	}
}
